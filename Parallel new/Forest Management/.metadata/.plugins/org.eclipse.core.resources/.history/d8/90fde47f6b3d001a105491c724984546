package com.capgemini.forestmgtboot.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import com.capgemini.forestmgtboot.dto.CustomerBean;
import com.capgemini.forestmgtboot.dto.ProductBean;

@Repository
public class ProductDAOImpl implements ProductDAO{
	@PersistenceUnit
	EntityManagerFactory factory;
	
	@Override
	public boolean addProduct(ProductBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		try {
			transaction.begin();
			manager.persist(bean);
			transaction.commit();
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	@Override
	public ProductBean getProduct(int prodId) {
		EntityManager manager = factory.createEntityManager();
		ProductBean bean=manager.find(ProductBean.class, prodId);
		return bean;
	}

	@Override
	public List<ProductBean> getAllProducts() {
		EntityManager manager = factory.createEntityManager();
		String getall="from ProductBean";
		TypedQuery<ProductBean> query=manager.createQuery(getall,ProductBean.class);
		return query.getResultList();
	}

	@Override
	public boolean deleteProduct(int prodId) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		ProductBean bean = manager.find(ProductBean.class, prodId);
		if(bean!=null) {
			transaction.begin();
			manager.remove(bean);
			transaction.commit();
			return true;
		} else {
			return false;
		}
	}

	@Override
	public boolean modifyProduct(ProductBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		ProductBean productBean = manager.find(ProductBean.class, bean.getProdId());
		if (productBean != null) {
			transaction.begin();
			productBean.setProdId(productBean.getProdId());
			productBean.setProdName(productBean.getProdName());
			productBean.setProdDescription(productBean.getProdDescription());
			productBean.setCost(productBean.getCost());
			transaction.commit();
			return true;
		}
		manager.close();
		return false;
	}

	

}
