package com.capgemini.forestjdbc.dao;

import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import com.capgemini.forestjdbc.bean.LandBean;


public class LandDAOImpl implements LandDAO{
	FileReader reader;
	Properties prop;

	public LandDAOImpl() {
		try {
			reader = new FileReader("db.properties");
			prop = new Properties();
			prop.load(reader);
			Class.forName(prop.getProperty("driverClass"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public List<LandBean> showAllLands() {
		List<LandBean> list = new ArrayList<LandBean>();
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				Statement stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(prop.getProperty("query5"))) {

			while (rs.next()) {
				LandBean land = new LandBean();
				land.setLandId(rs.getInt(1));
				land.setLandLoc(rs.getString(2));
				land.setLandVal(rs.getInt(3));
				land.setAcqDate(rs.getString(4));
				list.add(land);
			}
			return list;
		} catch (Exception e) {
			e.getStackTrace();
		}
		return null;
		
	}


	@Override
	public boolean addLand(LandBean land) {
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("addLandQuery"));) {

			pstmt.setInt(1, land.getLandId());
			pstmt.setString(2, land.getLandLoc());
			pstmt.setInt(3,land.getLandVal());
			pstmt.setString(4,land.getAcqDate());
			
			int count = pstmt.executeUpdate();
			if (count > 0) {
				return true;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public boolean removeLand(int landId) {
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("deleteLandQuery"))) {
			pstmt.setInt(1, landId);

			int count = pstmt.executeUpdate();
			if (count > 0) {
				return true;
			} else {
				return false;
				
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return false;

	}

	
	
	
	
}