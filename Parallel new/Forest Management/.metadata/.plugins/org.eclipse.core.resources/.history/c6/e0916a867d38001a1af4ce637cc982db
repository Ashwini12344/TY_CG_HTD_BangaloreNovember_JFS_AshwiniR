package com.capgemini.forestjdbc.dao;

import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import com.capgemini.forestjdbc.bean.SchedulerBean;

public class SchedulerDaoImpl implements SchedulerDao{
	
	private List<SchedulerBean> schedule=new ArrayList<SchedulerBean>();
	
	FileReader reader;
	Properties prop;
	SchedulerBean schedule1;
	
	public SchedulerDaoImpl() {
		try {

			reader=new FileReader("db.properties");
			prop =new Properties();
			prop.load(reader);
			Class.forName(prop.getProperty("driverClass"));

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public boolean addSchedule(SchedulerBean bean) {
		try(Connection conn=DriverManager.getConnection(prop.getProperty("dbUrl"),
				prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt=conn.prepareStatement(prop.getProperty("addSchedule"))){
			
			pstmt.setInt(1,bean.getScheduleId());
			pstmt.setInt(2,bean.getContractId());
			pstmt.setInt(3, bean.getProductId());
			pstmt.setInt(4, bean.getQuantity());
			pstmt.setString(5, bean.getDeliveryDate());
			
			int  count= pstmt.executeUpdate(); 
			if(count>0) {
				return true;
			}

		}catch(Exception e) {
		}
		throw new NotFoundException("Already Exist");
	}

	@Override
	public boolean modifySchedule(SchedulerBean sbean) {
		try(Connection conn=DriverManager.getConnection(prop.getProperty("dbUrl"),
				prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt=conn.prepareStatement(prop.getProperty("modifySchedule"))){



			pstmt.setInt(1, sbean.getContractId());
			pstmt.setInt(2, sbean.getProductId());
			pstmt.setInt(5, sbean.getScheduleId());
			pstmt.setInt(3, sbean.getQuantity());
			pstmt.setString(4, sbean.getDeliveryDate());
			
			
			

			int  count= pstmt.executeUpdate();  
			if(count>0) {
				return true;
			}

		}catch(Exception e) {
		}
		throw new NotFoundException("Details Not Found!!");
	}

	@Override
	public boolean deleteSchedule(int scheduleId) {
		try(Connection conn=DriverManager.getConnection(prop.getProperty("dbUrl"),
				prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt=conn.prepareStatement(prop.getProperty("deleteSchedule"))){

			

			pstmt.setInt(1, scheduleId);
			

			int  count= pstmt.executeUpdate(); 
			if(count>0) {
				return true;
			}

		}catch(Exception e) {
		}
		throw new NotFoundException("Details Not Found!!");
	}

	@Override
	public SchedulerBean getSchedule(int scheduleId) {
		SchedulerBean scheduler1=null;

		try(Connection conn=DriverManager.getConnection(prop.getProperty("dbUrl"),
				prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt=conn.prepareStatement(prop.getProperty("getSchedule"))){

			pstmt.setInt(1, scheduleId);
			
			

			ResultSet rs=pstmt.executeQuery();

			while(rs.next()) {
				scheduler1 =new SchedulerBean();
				scheduler1.setScheduleId(rs.getInt("scheduleId"));
				scheduler1.setContractId(rs.getInt("contractId"));
				scheduler1.setProductId(rs.getInt("productId"));
				scheduler1.setQuantity(rs.getInt("quantity"));
				scheduler1.setDeliveryDate(rs.getString("deliveryDate"));
				
				
				return scheduler1;
			
			}

		}catch(Exception e) {
		}
		throw new NotFoundException("Details Not Found!!");
		
	}

	@Override
	public List<SchedulerBean> getAllSchedules() {
		List<SchedulerBean> list=new ArrayList<SchedulerBean>();

		try(Connection conn=DriverManager.getConnection(prop.getProperty("dbUrl"),
				prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				Statement stmt=conn.createStatement();
				ResultSet rs=stmt.executeQuery(prop.getProperty("getAllSchedule"))){

			while(rs.next()) {

				schedule1 =new SchedulerBean();
				schedule1.setContractId(rs.getInt(2));
				schedule1.setProductId(rs.getInt(3));
				schedule1.setScheduleId(rs.getInt(1));
				schedule1.setQuantity(rs.getInt(4));
				schedule1.setDeliveryDate(rs.getString(5));
				list.add(schedule1);
			}

			return list;

		}catch(Exception e) {
			e.printStackTrace();
		}
		throw new NotFoundException("Details Not Found!!");
	}



	
	
}
